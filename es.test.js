// Generated by CoffeeScript 1.6.2
(function() {
  var config, createIndex, deleteIndex, es, opts, should;

  es = require("./es");

  should = require("should");

  config = {
    uri: process.env.ES_URI,
    index: "test",
    settings: {
      "mappings": {
        "_default_": {
          "properties": {
            "val": {
              "fields": {
                "val": {
                  "index": "not_analyzed",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  };

  opts = {
    uri: config.uri,
    index: config.index,
    settings: config.settings
  };

  /*
  describe "elastic basic operations", ->
  
  
    it "index: create / get / delete", (done)->
  
      opts =
        uri: config.uri
        index:  config.index
        settings : config.settings
  
  
      es.createIndex "test", opts, (err, res) ->
        should.not.exist err
        item.should.exist res
        #item.should.have.keys "name", "pass", "id"
        done()
  */


  createIndex = function(done) {
    return es.createIndex(opts, function(err, res) {
      should.not.exist(err);
      should.exist(res);
      return done(err, res);
    });
  };

  deleteIndex = function(done) {
    return es.deleteIndex(opts, function(err, res) {
      should.not.exist(err);
      should.exist(res);
      return done(err, res);
    });
  };

  createIndex(function() {
    return deleteIndex(function() {});
  });

}).call(this);

/*
//@ sourceMappingURL=es.test.map
*/
